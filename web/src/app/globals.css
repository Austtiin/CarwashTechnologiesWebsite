/* src/app/globals.css */

/* This one line imports all of Tailwind's base, component, and utility styles */
@import "tailwindcss";

/* In Tailwind v4, we use standard CSS custom properties.
  We can use the theme() function to access our design tokens.
*/

/* Base styles for headings */
h1 {
  font-size: theme(fontSize.4xl);
  font-weight: theme(fontWeight.bold);
  letter-spacing: theme(letterSpacing.tight);
  color: theme(colors.gray.900);
}

@media (min-width: 640px) {
  h1 {
    font-size: theme(fontSize.5xl);
  }
}

@media (min-width: 1024px) {
  h1 {
    font-size: theme(fontSize.6xl);
  }
}

p {
  font-size: theme(fontSize.lg);
  color: theme(colors.gray.600);
}

/* Our custom button class */
.btn-primary {
  display: inline-block;
  border-radius: theme(borderRadius.lg);
  background-color: theme(colors.yellow.400);
  padding: 0.75rem 1.5rem; /* Equivalent to py-3 px-6 */
  text-align: center;
  font-weight: theme(fontWeight.semibold);
  color: theme(colors.gray.900);
  box-shadow: theme(boxShadow.sm);
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.btn-primary:hover {
  background-color: theme(colors.yellow.500);
}

/* Car wash animation */
.car-moving {
  animation: carMove 4s ease-in-out infinite;
}

@keyframes carMove {
  0% { transform: translateX(-50px); }
  50% { transform: translateX(calc(100vw - 120px)); }
  100% { transform: translateX(-50px); }
}

/* Fade in animation */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.fade-in-up {
  animation: fadeInUp 0.6s ease-out;
}


.shiny-text {
  color: black; /* Changed to black for the main text color */
  background: linear-gradient(
    120deg,
    transparent 40%, /* Changed to transparent for the background */
    rgba(128, 128, 128, 0.8) 50%, /* Grey for the "shine" effect, adjust opacity as needed */
    transparent 60% /* Changed to transparent for the background */
  );
  background-size: 200% 100%;
  -webkit-background-clip: text; /* This still clips the gradient to the text shape */
  background-clip: text;
  display: inline-block;
  animation: shine 5s linear infinite;
  /* Add a text-shadow for a subtle "behind" effect, if desired */
  text-shadow: 0 0 5px rgba(0, 0, 0, 0.2); /* Optional: adds a slight shadow to make the text pop */
}

@keyframes shine {
  0% {
    background-position: 100%;
  }
  100% {
    background-position: -100%;
  }
}

.shiny-text.disabled {
  animation: none;
}


.aurora-container {
  width: 100%;
  height: 100%;
}